<?php

/**
* @file
* Module for creating config log.
*/

/**
* Implementation of hook_install().
*/
function event_install() {
  // Use schema API to create database table.
  \Drupal::entityTypeManager()->clearCachedDefinitions();
  $db_connection = \Drupal::database();
  if (!$db_connection->schema()->tableExists('config_log')) {
    drupal_install_schema('event');
  }

}



/**
  * Implementation of hook_uninstall().
*/
function event_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('event');
}

/**
 * Implements hook_schema().
 */
function event_schema() {
  $schema['config_log'] = array(
    'description' => 'The base table for configuration logging.',
    'fields' => array(
      'clid' => array(
        'description' => 'The primary identifier for a log record.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this log entry.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'operation' => array(
        'description' => 'Config operation.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'data' => array(
        'description' => 'A serialized configuration object data.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
      ),
      'name' => array(
        'description' => 'Config object name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      )
    ),
    'primary key' => array('clid'),
    'indexes' => array(
      'uid' => array('uid'),
      'name' => array('name'),
    ),
  );
  return $schema;
}
